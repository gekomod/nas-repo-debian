name: Update Signed Repository

on:
  push:
    branches: [ main ]
    paths:
      - 'pool/**'
  workflow_dispatch:

env:
  DIST: stable
  COMPONENT: main
  ARCH: amd64

jobs:
  setup-gpg:
    runs-on: ubuntu-latest
    outputs:
      gpg-key-id: ${{ steps.setup-keys.outputs.key-id }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup GPG keys
      id: setup-keys
      run: |
        # Sprawdź czy klucz już istnieje
        if [ -f "KEY.gpg" ]; then
          echo "✅ Using existing GPG key"
          gpg --import KEY.gpg
          KEY_ID=$(gpg --list-keys --with-colons | grep '^fpr:' | head -1 | cut -d':' -f10)
          echo "key-id=$KEY_ID" >> $GITHUB_OUTPUT
        else
          # Generuj nowy klucz - użyj podwójnego % dla escape'owania
          echo "🔐 Generating new GPG key..."
          gpg --batch --generate-key <<'EOF'
Key-Type: RSA
Key-Length: 4096
Name-Real: NAS Repository
Name-Email: nas-repo@users.noreply.github.com
Expire-Date: 0
%%no-protection
%%commit
EOF
          
          KEY_ID=$(gpg --list-keys --with-colons | grep '^fpr:' | head -1 | cut -d':' -f10)
          gpg --armor --export "$KEY_ID" > KEY.gpg
          echo "key-id=$KEY_ID" >> $GITHUB_OUTPUT
          echo "✅ Generated new GPG key: $KEY_ID"
        fi

  build-repository:
    runs-on: ubuntu-latest
    needs: setup-gpg
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install required tools
      run: |
        sudo apt-get update
        sudo apt-get install -y reprepro gnupg apt-utils

    - name: Import GPG key
      run: |
        gpg --import KEY.gpg
        # Trust the key
        KEY_FPR=$(gpg --list-keys --with-colons | grep '^fpr:' | head -1 | cut -d':' -f10)
        echo "$KEY_FPR:6:" | gpg --import-ownertrust

    - name: Setup repository structure
      run: |
        mkdir -p conf
        cat > conf/distributions << EOF
Origin: NAS Repository
Label: NAS Debian Repository
Codename: $DIST
Architectures: $ARCH
Components: $COMPONENT
Description: Repository for NAS applications
SignWith: ${{ needs.setup-gpg.outputs.gpg-key-id }}
EOF

        cat > conf/options << EOF
basedir $(pwd)
EOF

    - name: Find and add all packages
      run: |
        # Znajdź wszystkie pliki .deb w pool
        find pool -name "*.deb" | while read deb_file; do
          echo "📦 Adding package: $deb_file"
          reprepro includedeb $DIST "$deb_file"
        done

    - name: Export and sign repository
      run: |
        reprepro export $DIST
        
        # Sprawdź podpis
        cd dists/$DIST
        gpg --verify Release.gpg Release

    - name: List all packages in repository
      run: |
        reprepro list $DIST

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        keep_files: true

    - name: Verify deployment
      run: |
        echo "✅ Repository deployed to GitHub Pages"
        echo "📦 Available at: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/"
