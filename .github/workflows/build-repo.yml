name: Build Debian Repository

on:
  push:
    branches: [main]
    paths:
      - 'pool/**'
  workflow_dispatch:

jobs:
  build-repository:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg

      - name: Setup GPG key from repository
        run: |
          # Sprawdź czy istnieje już klucz w repozytorium
          if [ -f "KEY.gpg" ] && [ -f "private.key" ]; then
            echo "✅ Using existing GPG keys from repository..."
            gpg --import private.key
            gpg --import KEY.gpg
            KEY_ID=$(gpg --list-keys --with-colons | grep '^fpr:' | head -1 | cut -d':' -f10)
            echo "KEY_ID=$KEY_ID" >> $GITHUB_ENV
            echo "🔑 Using key ID: $KEY_ID"
          else
            echo "❌ No existing GPG keys found, generating new ones..."
            gpg --batch --passphrase '' --quick-gen-key "NAS Repository <nas-repo@example.com>" rsa4096 default never
            KEY_ID=$(gpg --list-keys --with-colons | grep '^fpr:' | head -1 | cut -d':' -f10)
            gpg --armor --export "$KEY_ID" > KEY.gpg
            gpg --export-secret-keys --armor "$KEY_ID" > private.key
            echo "KEY_ID=$KEY_ID" >> $GITHUB_ENV
            echo "🔑 Generated new key ID: $KEY_ID"
          fi

      - name: Create repository with correct paths
        run: |
          chmod +x scripts/create-simple-repo.sh
          ./scripts/create-simple-repo.sh

      - name: Test package URLs
        run: |
          echo "🔗 TESTING package URLs..."
          if [ -f "dists/stable/main/binary-amd64/Packages" ]; then
            grep "Filename:" dists/stable/main/binary-amd64/Packages | while read line; do
              filename=$(echo "$line" | cut -d' ' -f2)
              
              # Sprawdź format ścieżki
              if [[ "$filename" != "pool/main/"* ]]; then
                echo "❌ BAD PATH: $filename"
                echo "   Should be: pool/main/$(basename "$filename")"
              elif [ ! -f "$filename" ]; then
                echo "❌ MISSING FILE: $filename"
              else
                echo "✅ GOOD PATH: $filename"
              fi
            done
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          keep_files: true

      - name: Final test
        run: |
          echo "✅ Repository deployed"
          echo "🌐 Test URL: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/pool/main/nas-web_1.2.6_amd64.deb"
          echo "📦 Correct package path: pool/main/nas-web_1.2.6_amd64.deb"
